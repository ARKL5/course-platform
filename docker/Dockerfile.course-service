# 课程服务 Dockerfile
FROM golang:1.21-alpine AS builder

# 设置工作目录
WORKDIR /app

# 复制go mod文件
COPY go.mod go.sum ./

# 下载依赖
RUN go mod download

# 复制源代码
COPY . .

# 编译课程服务
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o course-service ./cmd/course-service

# 运行阶段
FROM alpine:latest

# 安装ca证书
RUN apk --no-cache add ca-certificates

# 设置工作目录
WORKDIR /root/

# 从builder阶段复制编译好的二进制文件
COPY --from=builder /app/course-service .

# 复制配置文件
COPY --from=builder /app/configs ./configs

# 暴露端口
EXPOSE 50052

# 安装wget用于健康检查
RUN apk --no-cache add wget

# 健康检查 - 简单检查进程是否运行
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD pgrep course-service || exit 1

# 启动命令
CMD ["./course-service"] 